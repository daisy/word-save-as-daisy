<?xml version='1.0' encoding='utf-8'?>
<taskScript version="2.0" name="dtbook-postprocess">
	<nicename>Export to DTbook XML</nicename>
	<description>Apply cleanups and optional treatments on DTBook XML</description>
	<documentation uri=""/>
		
	<parameter name="input" value="" required="true">
		<nicename>Input DTBook file</nicename>
		<description>Select the DTBook input file</description>
		<datatype>
			<file mime="application/x-dtbook+xml" type="input"/>
		</datatype>
	</parameter>
	
	<parameter name="outputPath" value="" required="true">
		<nicename>Output directory</nicename>
		<description>Select directory for the output dtbook</description>
		<datatype>
			<directory type="output"/>
		</datatype>
	</parameter>

	<parameter name="dtbookFix" value="NOTHING" required="false">
		<nicename>DTBook Fix</nicename>
		<description>Select whether to apply DTBook Fix routines</description>
		<datatype>
			<enum>
				<item nicename="Do not apply DTBook Fix routines" value="NOTHING"/>
				<item nicename="Apply DTBook Fix routines" value="REPAIR_TIDY_NARRATOR"/>
			</enum>
		</datatype>
	</parameter>

	<parameter name="doSentDetection" value="false" required="false">
		<nicename>Apply sentence detection</nicename>
		<description>Select whether to apply sentence detection</description>
		<datatype>
			<boolean/>
		</datatype>
	</parameter>
	
	<!-- *************************
	      DTBook Fix - run Narrator category (which *includes* repair executors)
	     ************************* -->
	<task name="se_tpb_dtbookFix" interactive="false">
		<parameter>
			<name>input</name>
			<value>${input}</value>
		</parameter>

		<parameter>
			<name>output</name>
			<value>${outputPath}/pipeline__temp/tmp0/00-dtbookfix.xml</value>
		</parameter>

		<parameter>
			<name>runCategories</name>
			<value>${dtbookFix}</value>
		</parameter>
		
		<parameter>
			<name>simplifyHeadingLayout</name>
			<value>false</value>
		</parameter>

		<parameter>
			<name>forceRun</name>
			<value>false</value>
		</parameter>
		
		<parameter>
			<name>renameIllegalFilenames</name>
			<value>true</value>
		</parameter>
			
	</task>

	<!-- ****************************
	      Abbr and Acronym detection + sentence detections
	     **************************** -->
	<task name="se_tpb_xmldetection" interactive="false">
		<parameter>
			<name>input</name>
			<value>${outputPath}/pipeline__temp/tmp0/00-dtbookfix.xml</value>
		</parameter>		
		<parameter>
			<name>output</name>
			<value>${outputPath}/$filename{input}</value>
		</parameter>		
		<parameter>
			<name>doAbbrAcronymDetection</name>
			<value>true</value>
		</parameter>		
		<parameter>
			<name>doSentenceDetection</name>
			<value>${doSentDetection}</value>
		</parameter>		
		<parameter>
			<name>doWordDetection</name>
			<value>false</value>
		</parameter>
	</task>
	
	
	<!-- *************************
	      Delete temporary
	  	 ************************* --> 
	<task name="pipeline_system_deleter" interactive="false">
		<parameter>
			<name>delete</name>
			<value>${outputPath}/pipeline__temp/</value>
		</parameter>					
	</task>
	
</taskScript>
